<procedure>
      <procedureName>x_RunProcedureAndWait</procedureName>
      <description>Runs an Electric Commander procedure and waits for it to complete.  It is run in a separate job.  This is intended for use as a sub-procedure call from a step.</description>
      <jobNameTemplate/>
      <resourceName/>
      <timeLimit/>
      <timeLimitUnits>seconds</timeLimitUnits>
      <workspaceName/>
      <acl>
        <inheriting>1</inheriting>
      </acl>
      <propertySheet>
        <acl>
          <inheriting>1</inheriting>
        </acl>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <acl>
              <inheriting>1</inheriting>
            </acl>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <acl>
                  <inheriting>1</inheriting>
                </acl>
                <property>
                  <propertyName>additionalArgsToRunProcedure</propertyName>
                  <propertySheet>
                    <acl>
                      <inheriting>1</inheriting>
                    </acl>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>expectedOutcome</propertyName>
                  <propertySheet>
                    <acl>
                      <inheriting>1</inheriting>
                    </acl>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>ignoreMissingProcedureError</propertyName>
                  <propertySheet>
                    <acl>
                      <inheriting>1</inheriting>
                    </acl>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>0</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>procedureToRun</propertyName>
                  <propertySheet>
                    <acl>
                      <inheriting>1</inheriting>
                    </acl>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>projectToRun</propertyName>
                  <propertySheet>
                    <acl>
                      <inheriting>1</inheriting>
                    </acl>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>subJobLinkName</propertyName>
                  <propertySheet>
                    <acl>
                      <inheriting>1</inheriting>
                    </acl>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>additionalArgsToRunProcedure</formalParameterName>
        <defaultValue/>
        <description>Additional arguments to be passed to the ECAPI Procedure::run method.  This is a ruby snippet that is injected directly in to the ruby code.  The args are specified as follows:

:actualParameter =&gt; [ { :actualParameterName =&gt; "arg1Name", :value =&gt; "arg1Value" }, ... { :actualParameterName =&gt; "ArgNName", :value =&gt; "ArgNValue" } ]

This may be formatted for readability in the text area.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>textarea</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>expectedOutcome</formalParameterName>
        <defaultValue>(success|warning)</defaultValue>
        <description>The expected outcome of the procedure.  If multiple values are allowed, supply them like this: "(success|warning)"</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>ignoreMissingProcedureError</formalParameterName>
        <defaultValue>false</defaultValue>
        <description>If true, and the procedure we are told to run doesn't exist, this procedure will succeed. If this is set to false, we will fail in that case.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>checkbox</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>procedureToRun</formalParameterName>
        <defaultValue/>
        <description>The name of the Electric Commander procedure to run.	</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>projectToRun</formalParameterName>
        <defaultValue>$[/myProject/projectName]</defaultValue>
        <description>The name of the Electric Commander project with the procedure to run.	</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>subJobLinkName</formalParameterName>
        <defaultValue/>
        <description>Optional name of the link to the sub-job.  If not specified, the name of the sub-job will be used as the link name -- which is often times less than desirable.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>run</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <commandPlaceholder>This command has been copied to an external file</commandPlaceholder>
        <condition/>
        <description>Runs the given procedure. Exits with 0 if the procedure completes with the expected outcome, 1 otherwise. Creates a link from the current job to the spawned job.</description>
        <errorHandling>abortProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName/>
        <parallel>0</parallel>
        <postProcessor/>
        <precondition/>
        <releaseMode>none</releaseMode>
        <resourceName/>
        <shell>ec-ruby</shell>
        <timeLimit/>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory/>
        <workspaceName/>
        <acl>
          <inheriting>1</inheriting>
        </acl>
        <propertySheet>
          <acl>
            <inheriting>1</inheriting>
          </acl>
          <property>
            <propertyName>ec_customEditorData</propertyName>
            <propertySheet>
              <acl>
                <inheriting>1</inheriting>
              </acl>
              <property>
                <propertyName>formType</propertyName>
                <expandable>1</expandable>
                <value>command</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>invokedProcedure</propertyName>
            <expandable>1</expandable>
            <value>830075</value>
          </property>
        </propertySheet>
      </step>
    </procedure>
